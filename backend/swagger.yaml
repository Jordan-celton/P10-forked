swagger: '2.0'
info:
  title: Bank Argent API Documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successful
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successful
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get user profile
      description: API to fetch a user's profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update user profile
      description: API to update a user's profile
      parameters:
        - in: body
          name: body
          description: User profile update data
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get user transactions for the current month
      description: API to fetch all transactions for the current month, grouped by account
      parameters:
        - in: query
          name: accountId
          type: string
          description: ID of the account to filter transactions (optional)
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Invalid request parameters
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                example: "Invalid account ID. Please provide a valid account ID."
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              message:
                type: string
                example: "An unexpected error occurred on the server. Please try again later."

  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get details of a specific transaction
      description: API to fetch details of a specific transaction by its ID
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to retrieve
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '400':
          description: Invalid transaction ID format
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                example: "Invalid transaction ID format. Please provide a valid transaction ID."
        '404':
          description: Transaction not found
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 404
              message:
                type: string
                example: "Transaction with the given ID not found."
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              message:
                type: string
                example: "An unexpected error occurred on the server. Please try again later."

    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update a specific transaction
      description: API to update details of an existing transaction by its ID
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to update
        - in: body
          name: body
          required: true
          description: Updated transaction details
          schema:
            $ref: '#/definitions/UpdateTransactionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details updated successfully
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '400':
          description: Invalid request
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                example: "Invalid request. The 'transactionId' or update data is missing or malformed."
        '404':
          description: Transaction not found
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 404
              message:
                type: string
                example: "Transaction with the given ID was not found."
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              message:
                type: string
                example: "An unexpected error occurred on the server. Please try again later."

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public name

  Login:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          accounts:
            type: array
            items:
              type: object
              properties:
                accountId:
                  type: string
                  description: ID of the account
                accountName:
                  type: string
                  description: Name of the account
                transactions:
                  type: array
                  items:
                    type: object
                    properties:
                      transactionId:
                        type: string
                        description: ID of the transaction
                      date:
                        type: string
                        format: date-time
                        description: Date of the transaction
                      amount:
                        type: number
                        format: float
                        description: Amount of the transaction
                      description:
                        type: string
                        description: Description of the transaction

  TransactionDetailsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactionId:
            type: string
            description: ID of the transaction
          date:
            type: string
            format: date-time
            description: Date of the transaction
          amount:
            type: number
            format: float
            description: Amount of the transaction
          description:
            type: string
            description: Description of the transaction
          accountId:
            type: string
            description: ID of the account associated with this transaction
          accountName:
            type: string
            description: Name of the account associated with this transaction
          category:
            type: string
            description: Category of the transaction (e.g., Groceries, Utilities, Rent, etc.)
          tags:
            type: array
            items:
              type: string

  UpdateTransactionRequest:
    type: object
    properties:
      amount:
        type: number
        format: float
      description:
        type: string
      category:
        type: string
